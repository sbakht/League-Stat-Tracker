<!DOCTYPE html>
<html>
<head>
	<meta charset="utf8">
	<title>League of Legends Statistics Tracker</title>
	<link href="css/bootstrap.min.css" rel="stylesheet">
    <link href="css/bootstrap-responsive.css" rel="stylesheet">
    <link href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" rel="stylesheet"  />
	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
    <script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
	<script src="js/highcharts.js"></script>
	<script src="js/autocomplete.js"></script>
    <script type="text/javascript" src="/js/themes/grid.js"></script>
	<style type="text/css">
      body {
        padding-top: 0px;
        padding-bottom: 40px;
      }

      /* Custom container */
      .container-narrow {
        margin: 0 10px;
    
      }
      .container-narrow > hr {
        margin: 10px 0;
      }
	  .form-element label {
	    display: inline-block;
	    width: 120px;
	  }
    </style>

	<script type="text/javascript">
		$(document).ready(function(){
			$("form").submit(function(){
		  	var champion = $("input[name=inputchamp]").val()
		  	testdata = $("#datatype").val()
		  	tooltest = $("#tooltip").val()
		  	graphType = $("#graphtype").val()
		  	playerid = $("#playerid").val()
		  	// $.post("/plswork",{playerid: "41229298", champion: champion},
		  	$.post("/plswork",{playerid: playerid, champion: champion},
		  		function(data,status) {
		  			data = JSON.parse(data);
		  			//console.dir(data);

  					var names = new Array();
  					var dataPoints = new Array([],[],[],[]);
  					var dataPointsWithOutcomeColor = new Array([],[],[],[]);
  					var test = new Array();
  					var tool = new Array();
  					var outcome = new Array();
  					//console.dir(dataPoints);

  					switch(testdata[0]) { //Sets title for graphs from first selected #datatype to show
  						case "kills":
  							text = "Champions Killed"
  							break;
  						case "deaths":
  							text = "Deaths"
  							break;
  						case "assists":
  							text = "Assists"
  							break;
  						case "minions":
  							text = "Minions Killed"
  							break;		
  					}
					for(i = 0; i < data.length; i++) {
						names.push(data[i].champion);
						outcome.push(data[i].outcome);
						if(data[i].outcome == "Won Match") {
							color = "green"
						}else{
							color = "red"
						}

						for(y = 0; y < testdata.length; y++) {
							dataPoints[y].push(data[i][testdata[y]]);
							dataPointsWithOutcomeColor[y].push({ y : data[i][testdata[y]], marker : { fillColor: color} });
						}
						for(x = 0; x < tooltest.length; x++) {
							switch(tooltest[x]) {
								case "kills":
									if(tool[i] == undefined) {
										tool[i] = "";
									}
									tool[i] += ("<b>Kills:</b> " + data[i][tooltest[x]]) + '<br>';
									break;
								case "deaths":
									if(tool[i] == undefined) {
										tool[i] = "";
									}
									tool[i] += ("<b>Deaths:</b> " + data[i][tooltest[x]]) + '<br>';
									break;
								case "assists":
									if(tool[i] == undefined) {
										tool[i] = "";
									}
									tool[i] += ("<b>Assists:</b> " + data[i][tooltest[x]]) + '<br>';
									break;
								case "minions":
									if(tool[i] == undefined) {
										tool[i] = "";
									}
									tool[i] += ("<b>Minions:</b> " + data[i][tooltest[x]]) + '<br>';
									break;
								case "length":
									if(tool[i] == undefined) {
										tool[i] = "";
									}
									tool[i] += ("<b>Length:</b> " + data[i][tooltest[x]]) + '<br>';
									break;
								case "outcome":
									if(tool[i] == undefined) {
										tool[i] = "";
									}
									tool[i] += ("<b>Outcome:</b> " + data[i][tooltest[x]]) + '<br>';
									break;
								case "champion":
									if(tool[i] == undefined) {
										tool[i] = "";
									}
									tool[i] += ("<b>Champion:</b> " + data[i][tooltest[x]]) + '<br>';
									break;
								default:
									tool.push("default");
							}
						}
					}
					//console.dir(dataPoints)
					var points = [{}];
					//console.dir(testdata)
					for(y = 0; y < testdata.length; y++) {
						//points[y] = {name : testdata[y], data : dataPoints[y]} //No outcome color
						points[y] = {name : testdata[y], data : dataPointsWithOutcomeColor[y]}




					}
					graphfnc(text,names,dataPoints,tool,graphType,points);
	  		})
	  		return false;
		  });

		  	function graphfnc(text,names,dataPoints,tool,graphType,points) {
		  		i = 0
			    $('#container').highcharts({
			        chart: {
			            type: graphType
			        },
			        title: {
			            text: text
			        },
			        xAxis: {
			            categories: names
			        },
			        // yAxis: {
			            // title: {
			                // text: 'Champion'
			            // }
			        // },
			        // series: [{
			        // 	name: text,
			        //     data: dataPoints[0]
			        // }],
			        series: points,
			        tooltip: {
					    formatter: function() {
					        return tool[this.point.x];
					        // return 'Minion Kills: <b>' + this.y + '<br>' + tool[this.point.x];
					    }
					}
			    });
			}

		  });
  	</script>



</head>

<body>
	<div class="container-narrow">
		<div class="masthead">
			<h3 class="muted">League of Legends Statistics Tracker</h3>
	    </div>
	    <hr>

		<div id="container" style="width:100%; height:400px;"></div>
		<form post="#" style="padding-top:5px;">
			<div class="form-element">
				<label>Username:</label>
				<select id="playerid">
					<option>iwanthotdogs</option>
					<option>Sealiest Seal</option>
				</select>
			</div>
			<div class="form-element">
				<label>Champions:</label> 
				<input id="tags" type="text" name="inputchamp" placeholder="Champion&hellip;">
			</div>
			<div class="form-element">
				<label>Data Types:</label>
				<select id="datatype" multiple>
					<option value="kills">Kills</option>
					<option value="deaths">Deaths</option>
					<option value="assists">Assists</option>
					<option value="minions">Minions</option>
				</select>
			</div>
			<div class="form-element">
				<label>Labels:</label>
				<select id="tooltip" multiple>
					<option value="champion">Champion</option>
					<option value="kills">Kills</option>
					<option value="deaths">Deaths</option>
					<option value="assists">Assists</option>
					<option value="minions">Minions</option>
					<option value="length">Length</option>
					<option value="outcome">Outcome</option>
				</select>
			</div>
			<div class="form-element">
				<label>Graph Type:</label>
				<select id="graphtype">
					<option value="line">Line Graph</option>
					<option value="bar">Bar Graph</option>
				</select>
			</div>
			<button type="submit">Submit</button>
		</form>
	</div>
</body>

</html>